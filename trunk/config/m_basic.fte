#
# eFTE mode for Basic
#   build from docs on FreeBasic (http://www.freebasic.net)
#

colorize BASIC {
    SyntaxParser = "SIMPLE";

    color {
        { "Normal",      "Editor_Default" },
        { "Function",    "Lang_Function" },
        { "Number",      "Lang_DecimalNumber" },
        { "Comment",     "Lang_Comment" },
        { "String",      "Lang_String" },
        { "Punctuation", "Lang_Punctuation" },
    };

    keyword "Editor_Keywords" {
        # Generic
        "with",

        # Variable Declarations
        "dim", "const", "scope", "static", "shared", "var",

        # User defined types
        "enum", "type", "union", "field", "constructor", "deconstructor",
        "function", "operator", "property", "sub", "static", "const",

        # Control flow statements
        "goto", "gosub", "on", "return", "if", "end", "else", "select",
        "case", "exit", "while", "wend", "for", "next", "do", "loop",
        "continue", "then",

        # Procedures
        "declare", "overload", "alias", "export", "lib", "byref", "byval",
        "any", "VA_FIRST", "VA_ARG", "VA_NEXT", "call", "stdcall", "cdecl",
        "pascal", "as",

        # Modularizing
        "common", "dylibfree", "dylibload", "dylibsymbol", "extern",
        "import", "namespace", "using",

        # Error Handling
        "error"

    };

    keyword "Editor_Keywords2" {
        "this", "public", "private", "protected"
    };

    keyword "Editor_Keywords3" {
        # Operators
        "let", "mod", "and", "eqv", "imp", "or", "xor", "shl", "shr",
        "not", "andalso", "orelse", "strptr", "varptr", "procptr",
        "new", "delete"
    };

    h_state 0 { "Normal" }
    h_trans { 1, "-s", /_a-zA-Z&$/, "Normal" }
    h_trans { 2, "<", "''", "Comment" }
    h_trans { 3, "", "\"", "String" }
    h_trans { 4, "", "'", "String" }
    h_trans { 5, "s", "-+0-9eE+-", "Number" }
    h_trans { 0, "S", /_a-zA-Z0-9$/, "Punctuation" }

    h_state 1 { "Normal" }
    h_trans { 0, "$", "", "Normal" }
    h_wtype { 1, 1, 0, "", /_a-zA-Z0-9$/ }

    h_state 2 { "Comment" }
    h_trans { 0, "$", "", "String" }

    h_state 3 { "String" }
    h_trans { 0, "", "\"", "String" }
    h_trans { 0, "$", "", "String" }
    h_trans { 3, "Qq", "\\", "String" }
    
    h_state 4 { "String" }
    h_trans { 0, "", "'", "String" }
    h_trans { 0, "$", "", "String" }
    h_trans { 4, "Qq", "\\", "String" }
    
    h_state 5 { "Number" }
    h_trans { 0, "-S", "-+0-9eE+-", "Normal" }
    h_trans { 0, "$", "", "Normal" }
}

mode BASIC: SOURCE {
	FileNameRx         = /\c\.{{bas}|{bi}}$/;
    HilitOn            = 1;
    Colorizer          = "BASIC";
    AutoIndent         = 1;
    IndentMode         = "PLAIN";
    MatchCase          = 0;
    Trim               = 1;
    MultiLineHilit     = 1;
    AutoHilitParen     = 1;
    SaveFolds          = 0;
    
    RoutineRegexp      = /^\s*{{sub}|{function}|{type}}\s+/;
}

oinclude 'm_basic.pte';
oinclude 'mym_basic.fte';
